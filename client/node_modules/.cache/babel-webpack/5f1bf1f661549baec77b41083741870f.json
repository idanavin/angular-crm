{"ast":null,"code":"import _asyncToGenerator from \"D:/Code/angular-crm/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { costumers } from '../data/data';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CostumersService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.pageUsers = new Map();\n    this._costumers = costumers;\n  }\n\n  get getCostumersLength() {\n    return this._costumers.length;\n  }\n\n  getCostumersByPage(itemsPerPage, page) {\n    const lastIndex = itemsPerPage * (page + 1);\n    const firstIndex = lastIndex - itemsPerPage;\n    console.log(this._costumers);\n\n    if (lastIndex < this._costumers.length) {\n      return this.getLocalCostumers(firstIndex, lastIndex);\n    } else {\n      this.loadRandomUsers(itemsPerPage);\n      return this.getLocalCostumers(firstIndex, lastIndex);\n    }\n  }\n\n  getLocalCostumers(firstIndex, lastIndex) {\n    return this._costumers.slice(firstIndex, lastIndex);\n  }\n\n  loadRandomUsers(itemsPerPage) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const pageNumber = 1;\n      const users = yield _this.httpClient.get(`https://randomuser.me/api/?page=${pageNumber}&results=${itemsPerPage}`).toPromise();\n      console.log({\n        users\n      });\n\n      _this._costumers.push(...users.results);\n\n      _this.saveToLocalstorage();\n    })();\n  }\n\n  saveToLocalstorage() {\n    localStorage.setItem('costumers', JSON.stringify(this._costumers));\n  }\n\n  loadLocalstorage() {\n    const costumers = localStorage.getItem('costumers');\n    if (costumers) this._costumers = JSON.parse(costumers);\n  }\n\n}\n\nCostumersService.ɵfac = function CostumersService_Factory(t) {\n  return new (t || CostumersService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nCostumersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CostumersService,\n  factory: CostumersService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["D:\\Code\\angular-crm\\src\\app\\services\\costumers.service.ts"],"names":[],"mappings":";AAEA,SAAS,SAAT,QAA0B,cAA1B;;;AAMA,OAAM,MAAO,gBAAP,CAAuB;AAQ3B,EAAA,WAAA,CAA6B,UAA7B,EAAmD;AAAtB,SAAA,UAAA,GAAA,UAAA;AALpB,SAAA,SAAA,GAAuC,IAAI,GAAJ,EAAvC;AAMP,SAAK,UAAL,GAAkB,SAAlB;AACD;;AAEqB,MAAlB,kBAAkB,GAAA;AACpB,WAAO,KAAK,UAAL,CAAgB,MAAvB;AACD;;AAED,EAAA,kBAAkB,CAAC,YAAD,EAAuB,IAAvB,EAAmC;AACnD,UAAM,SAAS,GAAG,YAAY,IAAI,IAAI,GAAG,CAAX,CAA9B;AACA,UAAM,UAAU,GAAG,SAAS,GAAG,YAA/B;AACA,IAAA,OAAO,CAAC,GAAR,CAAY,KAAK,UAAjB;;AAEA,QAAI,SAAS,GAAG,KAAK,UAAL,CAAgB,MAAhC,EAAwC;AACtC,aAAO,KAAK,iBAAL,CAAuB,UAAvB,EAAmC,SAAnC,CAAP;AACD,KAFD,MAEO;AACL,WAAK,eAAL,CAAqB,YAArB;AACA,aAAO,KAAK,iBAAL,CAAuB,UAAvB,EAAmC,SAAnC,CAAP;AACD;AACF;;AAEO,EAAA,iBAAiB,CAAC,UAAD,EAAqB,SAArB,EAAsC;AAC7D,WAAO,KAAK,UAAL,CAAgB,KAAhB,CAAsB,UAAtB,EAAkC,SAAlC,CAAP;AACD;;AAEK,EAAA,eAAe,CAAC,YAAD,EAAqB;AAAA;;AAAA;AACxC,YAAM,UAAU,GAAG,CAAnB;AACA,YAAM,KAAK,SAAS,KAAI,CAAC,UAAL,CACjB,GADiB,CAEhB,mCAAmC,UAAU,YAAY,YAAY,EAFrD,EAIjB,SAJiB,EAApB;AAKA,MAAA,OAAO,CAAC,GAAR,CAAY;AAAE,QAAA;AAAF,OAAZ;;AAEA,MAAA,KAAI,CAAC,UAAL,CAAgB,IAAhB,CAAqB,GAAG,KAAK,CAAC,OAA9B;;AACA,MAAA,KAAI,CAAC,kBAAL;AAVwC;AAWzC;;AAEO,EAAA,kBAAkB,GAAA;AACxB,IAAA,YAAY,CAAC,OAAb,CAAqB,WAArB,EAAkC,IAAI,CAAC,SAAL,CAAe,KAAK,UAApB,CAAlC;AACD;;AAED,EAAA,gBAAgB,GAAA;AACd,UAAM,SAAS,GAAG,YAAY,CAAC,OAAb,CAAqB,WAArB,CAAlB;AACA,QAAI,SAAJ,EAAe,KAAK,UAAL,GAAkB,IAAI,CAAC,KAAL,CAAW,SAAX,CAAlB;AAChB;;AArD0B;;;mBAAhB,gB,EAAgB,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,UAAA,C;AAAA,C;;;SAAhB,gB;AAAgB,EAAA,OAAA,EAAhB,gBAAgB,CAAA,I;AAAA,EAAA,UAAA,EAFf","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { costumers } from '../data/data';\r\nimport { RandomUser, RandomUsers } from '../domain-layer/entities/random-users';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CostumersService {\r\n  private _costumers: RandomUser[];\r\n\r\n  readonly pageUsers: Map<number, RandomUser[]> = new Map<\r\n    number,\r\n    RandomUser[]\r\n  >();\r\n\r\n  constructor(private readonly httpClient: HttpClient) {\r\n    this._costumers = costumers;\r\n  }\r\n\r\n  get getCostumersLength(): number {\r\n    return this._costumers.length;\r\n  }\r\n\r\n  getCostumersByPage(itemsPerPage: number, page: number): RandomUser[] {\r\n    const lastIndex = itemsPerPage * (page + 1);\r\n    const firstIndex = lastIndex - itemsPerPage;\r\n    console.log(this._costumers);\r\n    \r\n    if (lastIndex < this._costumers.length) {\r\n      return this.getLocalCostumers(firstIndex, lastIndex);\r\n    } else {\r\n      this.loadRandomUsers(itemsPerPage)\r\n      return this.getLocalCostumers(firstIndex, lastIndex);\r\n    }\r\n  }\r\n\r\n  private getLocalCostumers(firstIndex: number, lastIndex: number): RandomUser[] {\r\n    return this._costumers.slice(firstIndex, lastIndex);\r\n  }\r\n\r\n  async loadRandomUsers(itemsPerPage: number) {\r\n    const pageNumber = 1;\r\n    const users = await this.httpClient\r\n      .get<RandomUsers>(\r\n        `https://randomuser.me/api/?page=${pageNumber}&results=${itemsPerPage}`\r\n      )\r\n      .toPromise();\r\n    console.log({ users });\r\n\r\n    this._costumers.push(...users.results);\r\n    this.saveToLocalstorage();\r\n  }\r\n\r\n  private saveToLocalstorage(): void {\r\n    localStorage.setItem('costumers', JSON.stringify(this._costumers));\r\n  }\r\n\r\n  loadLocalstorage(): void {\r\n    const costumers = localStorage.getItem('costumers')\r\n    if (costumers) this._costumers = JSON.parse(costumers) as RandomUser[]\r\n  }\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}