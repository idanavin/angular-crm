{"ast":null,"code":"import _asyncToGenerator from \"D:/Code/angular-crm/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet LoginComponent = class LoginComponent {\n  constructor(fb, authServiece) {\n    this.fb = fb;\n    this.authServiece = authServiece;\n    this.loading = false;\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(3)]]\n    });\n    this.loginError = false;\n    this.success = false;\n  }\n\n  ngOnInit() {}\n\n  login() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        _this.loginError = false;\n        _this.loading = true;\n        yield _this.authServiece.login(_this.loginForm.value);\n        _this.success = true;\n      } catch (error) {\n        _this.loginError = true;\n      }\n\n      _this.loading = false;\n    })();\n  }\n\n  get email() {\n    return this.loginForm.get('email');\n  }\n\n  get password() {\n    return this.loginForm.get('password');\n  }\n\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n  styles: []\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"sources":["D:\\Code\\angular-crm\\src\\app\\login-register\\login\\login.component.ts"],"names":[],"mappings":";;AAAA,SAAS,SAAT,QAAkC,eAAlC;AACA,SAAoB,UAApB,QAAkD,gBAAlD;AAQA,IAAa,cAAc,GAA3B,MAAa,cAAb,CAA2B;AAiBzB,EAAA,WAAA,CAAoB,EAApB,EAA6C,YAA7C,EAAsE;AAAlD,SAAA,EAAA,GAAA,EAAA;AAAyB,SAAA,YAAA,GAAA,YAAA;AAf7C,SAAA,OAAA,GAAmB,KAAnB;AAIA,SAAA,SAAA,GAAuB,KAAK,EAAL,CAAQ,KAAR,CAAc;AACnC,MAAA,KAAK,EAAE,CAAC,EAAD,EAAK,CACV,UAAU,CAAC,QADD,EAEV,UAAU,CAAC,KAFD,CAAL,CAD4B;AAKnC,MAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,CACb,UAAU,CAAC,QADE,EAEb,UAAU,CAAC,SAAX,CAAqB,CAArB,CAFa,CAAL;AALyB,KAAd,CAAvB;AAYE,SAAK,UAAL,GAAkB,KAAlB;AACA,SAAK,OAAL,GAAe,KAAf;AACD;;AAED,EAAA,QAAQ,GAAA,CACP;;AAEK,EAAA,KAAK,GAAA;AAAA;;AAAA;AACT,UAAI;AACF,QAAA,KAAI,CAAC,UAAL,GAAkB,KAAlB;AACA,QAAA,KAAI,CAAC,OAAL,GAAe,IAAf;AACA,cAAM,KAAI,CAAC,YAAL,CAAkB,KAAlB,CAAwB,KAAI,CAAC,SAAL,CAAe,KAAvC,CAAN;AACA,QAAA,KAAI,CAAC,OAAL,GAAe,IAAf;AACD,OALD,CAMA,OAAO,KAAP,EAAc;AACZ,QAAA,KAAI,CAAC,UAAL,GAAkB,IAAlB;AACD;;AACD,MAAA,KAAI,CAAC,OAAL,GAAe,KAAf;AAVS;AAWV;;AAEQ,MAAL,KAAK,GAAA;AACP,WAAO,KAAK,SAAL,CAAe,GAAf,CAAmB,OAAnB,CAAP;AACD;;AAEW,MAAR,QAAQ,GAAA;AACV,WAAO,KAAK,SAAL,CAAe,GAAf,CAAmB,UAAnB,CAAP;AACD;;AA5CwB,CAA3B;AAAa,cAAc,GAAA,UAAA,CAAA,CAL1B,SAAS,CAAC;AACT,EAAA,QAAQ,EAAE,WADD;AAET,EAAA,WAAW,EAAE,wBAFJ;AAGT,EAAA,SAAS,EAAE,CAAC,wBAAD,CAHF;;AAAA,CAAD,CAKiB,CAAA,EAAd,cAAc,CAAd;SAAA,c","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, Validators, FormBuilder} from '@angular/forms'\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loading: boolean = false;\r\n  success: boolean;\r\n  loginError: boolean;\r\n\r\n  loginForm: FormGroup = this.fb.group({\r\n    email: ['', [\r\n      Validators.required,\r\n      Validators.email\r\n    ]],\r\n    password: ['', [\r\n      Validators.required,\r\n      Validators.minLength(3)\r\n    ]]\r\n  });\r\n\r\n  constructor(private fb: FormBuilder, private authServiece: AuthService) {\r\n    this.loginError = false;\r\n    this.success = false; \r\n  }\r\n\r\n  ngOnInit(): void {   \r\n  }\r\n\r\n  async login() {\r\n    try {\r\n      this.loginError = false;\r\n      this.loading = true;\r\n      await this.authServiece.login(this.loginForm.value)\r\n      this.success = true\r\n    }\r\n    catch (error) {\r\n      this.loginError = true;\r\n    }\r\n    this.loading = false;\r\n  }\r\n\r\n  get email() {\r\n    return this.loginForm.get('email')\r\n  }\r\n\r\n  get password() {\r\n    return this.loginForm.get('password')\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}