{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/customers.service\";\nimport * as i2 from \"@angular/material/form-field\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/material/autocomplete\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/core\";\nimport * as i8 from \"@ngx-translate/core\";\n\nfunction SearchInputComponent_mat_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 4);\n    i0.ɵɵelement(1, \"img\", 5);\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const customer_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", customer_r2.name.first + \" \" + customer_r2.name.last);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", customer_r2 == null ? null : customer_r2.picture == null ? null : customer_r2.picture.thumbnail, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", customer_r2.name.first, \" \", customer_r2.name.last, \"\");\n  }\n}\n\nexport class SearchInputComponent {\n  constructor(customersService) {\n    this.customersService = customersService;\n    this.searchFormControl = new FormControl();\n    this.filtered = new EventEmitter();\n    this.allCustomers = this.customersService.UnsortedUsers;\n    this.filteredCustomers = this.searchFormControl.valueChanges.pipe(startWith(''), map(customer => {\n      var _a;\n\n      if (customer) {\n        const filtered = this._filter(customer);\n\n        this.filtered.emit(filtered);\n        return filtered;\n      } else {\n        this.filtered.emit([]);\n        return (_a = this.allCustomers) === null || _a === void 0 ? void 0 : _a.slice();\n      }\n    }));\n  }\n\n  ngOnInit() {}\n\n  _filter(value) {\n    var _a;\n\n    const filterValue = value.toLowerCase();\n    return (_a = this.allCustomers) === null || _a === void 0 ? void 0 : _a.filter(customer => {\n      const firstName = customer.name.first.toLowerCase();\n      const lastName = customer.name.last.toLowerCase();\n      return `${firstName} ${lastName}`.indexOf(filterValue) === 0 || `${lastName} ${firstName}`.indexOf(filterValue) === 0;\n    });\n  }\n\n}\n\nSearchInputComponent.ɵfac = function SearchInputComponent_Factory(t) {\n  return new (t || SearchInputComponent)(i0.ɵɵdirectiveInject(i1.CustomersService));\n};\n\nSearchInputComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SearchInputComponent,\n  selectors: [[\"app-customer-search-input\"]],\n  outputs: {\n    filtered: \"filtered\"\n  },\n  decls: 7,\n  vars: 8,\n  consts: [[1, \"example-full-width\"], [\"matInput\", \"\", 3, \"placeholder\", \"matAutocomplete\", \"formControl\"], [\"auto\", \"matAutocomplete\"], [\"class\", \"custom-mat-panel\", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"custom-mat-panel\", 3, \"value\"], [\"height\", \"25\", 3, \"src\"]],\n  template: function SearchInputComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-form-field\", 0);\n      i0.ɵɵelement(1, \"input\", 1);\n      i0.ɵɵpipe(2, \"translate\");\n      i0.ɵɵelementStart(3, \"mat-autocomplete\", null, 2);\n      i0.ɵɵtemplate(5, SearchInputComponent_mat_option_5_Template, 4, 4, \"mat-option\", 3);\n      i0.ɵɵpipe(6, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(4);\n\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(2, 4, \"CUSTOMERS_SEARCH_LABEL\"));\n      i0.ɵɵproperty(\"matAutocomplete\", _r0)(\"formControl\", ctx.searchFormControl);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(6, 6, ctx.filteredCustomers));\n    }\n  },\n  directives: [i2.MatFormField, i3.MatInput, i4.MatAutocompleteTrigger, i5.DefaultValueAccessor, i5.NgControlStatus, i5.FormControlDirective, i4.MatAutocomplete, i6.NgForOf, i7.MatOption],\n  pipes: [i8.TranslatePipe, i6.AsyncPipe],\n  styles: [\".mat-select-content[_ngcontent-%COMP%] {\\n  display: flex !important;\\n  justify-content: space-between !important;\\n  align-items: center !important;\\n  grid-gap: 9% !important;\\n  gap: 9% !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlYXJjaC1pbnB1dC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHdCQUFBO0VBQ0EseUNBQUE7RUFDQSw4QkFBQTtFQUNBLHVCQUFBO0VBQUEsa0JBQUE7QUFDSiIsImZpbGUiOiJzZWFyY2gtaW5wdXQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LXNlbGVjdC1jb250ZW50IHtcclxuICAgIGRpc3BsYXk6IGZsZXggIWltcG9ydGFudDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbiAhaW1wb3J0YW50O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlciAhaW1wb3J0YW50O1xyXG4gICAgZ2FwOiA5JSAhaW1wb3J0YW50O1xyXG59Il19 */\"]\n});","map":{"version":3,"sources":["D:\\Code\\angular-crm\\src\\app\\router-pages\\customers\\search-input\\search-input.component.ts","D:\\Code\\angular-crm\\src\\app\\router-pages\\customers\\search-input\\search-input.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Output, OnInit, EventEmitter } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { RandomUser } from 'src/app/domain-layer/entities/random-users';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { CustomersService } from 'src/app/services/customers.service';\r\n\r\n@Component({\r\n  selector: 'app-customer-search-input',\r\n  templateUrl: './search-input.component.html',\r\n  styleUrls: ['./search-input.component.scss'],\r\n})\r\nexport class SearchInputComponent implements OnInit {\r\n  searchFormControl: FormControl = new FormControl();\r\n  filteredCustomers?: Observable<RandomUser[]>;\r\n  allCustomers?: RandomUser[];\r\n  @Output() filtered: EventEmitter<RandomUser[]> = new EventEmitter<\r\n    RandomUser[]\r\n  >();\r\n\r\n  constructor(private customersService: CustomersService) {\r\n    this.allCustomers = this.customersService.UnsortedUsers;\r\n    this.filteredCustomers = this.searchFormControl.valueChanges.pipe(\r\n      startWith(''),\r\n      map((customer) => {\r\n        if (customer) {\r\n          const filtered = this._filter(customer)!;\r\n          this.filtered.emit(filtered);\r\n          return filtered;\r\n        } else {\r\n          this.filtered.emit([]);\r\n          return this.allCustomers?.slice()!;\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  private _filter(value: string) {\r\n    const filterValue = value.toLowerCase();\r\n    return this.allCustomers?.filter((customer) => {\r\n      const firstName = customer.name.first.toLowerCase()\r\n      const lastName = customer.name.last.toLowerCase()\r\n      return `${firstName} ${lastName}`.indexOf(filterValue) === 0 ||\r\n      `${lastName} ${firstName}`.indexOf(filterValue) === 0\r\n    });\r\n  }\r\n}\r\n","<mat-form-field class=\"example-full-width\">\n  <input\n    matInput\n    placeholder=\"{{'CUSTOMERS_SEARCH_LABEL' | translate}}\"\n    [matAutocomplete]=\"auto\"\n    [formControl]=\"searchFormControl\"\n  />\n\n  <mat-autocomplete #auto=\"matAutocomplete\">\n    <mat-option\n      class=\"custom-mat-panel\"\n      *ngFor=\"let customer of filteredCustomers | async\"\n      [value]=\"customer.name.first + ' ' + customer.name.last\"\n    >\n      <img\n        [src]=\"customer?.picture?.thumbnail\"\n        height=\"25\"\n      />\n      <span>{{ customer.name.first }} {{ customer.name.last }}</span>\n      <!-- <small>Email: {{ customer.email }}</small> -->\n    </mat-option>\n  </mat-autocomplete>\n</mat-form-field>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}