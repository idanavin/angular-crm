{"ast":null,"code":"import _asyncToGenerator from \"D:/Code/angular-crm/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/button\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/progress-spinner\";\nimport * as i4 from \"@ngx-translate/core\";\n\nfunction ButtonComponent_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, ctx_r0.pendingText));\n  }\n}\n\nfunction ButtonComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, ctx_r1.successMessage));\n  }\n}\n\nfunction ButtonComponent_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, ctx_r2.errorMessage));\n  }\n}\n\nfunction ButtonComponent_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, ctx_r3.text));\n  }\n}\n\nfunction ButtonComponent_mat_spinner_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\", 6);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"color\", ctx_r4.color)(\"diameter\", 24);\n  }\n}\n\nexport class ButtonComponent {\n  constructor() {\n    this.timeOutInMillis = 1500;\n    this.text = '';\n    this.status = 'idle';\n    this.color = 'primary';\n    this.type = 'submit';\n    this.pendingText = 'button.messages.loading';\n    this.successMessage = 'button.messages.successMessage';\n    this.errorMessage = 'button.messages.errorMessage';\n    this.disabled = false;\n    this.action = /*#__PURE__*/_asyncToGenerator(function* () {});\n\n    this.delay = timeOutInMilliSeconds => new Promise(resolve => setTimeout(resolve, timeOutInMilliSeconds));\n  }\n\n  get colorInverse() {\n    if (this.color == 'primary') return 'accent';\n    return 'primary';\n  }\n\n  get disabledMode() {\n    return this.disabled || this.status != 'idle';\n  }\n\n  ngOnInit() {}\n\n  execute() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        _this.status = 'pending';\n        yield _this.action();\n        _this.status = 'success';\n        yield _this.delay(_this.timeOutInMillis);\n        _this.status = 'idle';\n      } catch (error) {\n        console.error('Failed executing action with error', error);\n        _this.status = 'error';\n        yield _this.delay(_this.timeOutInMillis);\n        _this.status = 'idle';\n      }\n    })();\n  }\n\n}\n\nButtonComponent.ɵfac = function ButtonComponent_Factory(t) {\n  return new (t || ButtonComponent)();\n};\n\nButtonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ButtonComponent,\n  selectors: [[\"app-button\"]],\n  inputs: {\n    timeOutInMillis: \"timeOutInMillis\",\n    text: \"text\",\n    color: \"color\",\n    type: \"type\",\n    pendingText: \"pendingText\",\n    successMessage: \"successMessage\",\n    errorMessage: \"errorMessage\",\n    disabled: \"disabled\",\n    action: \"action\"\n  },\n  decls: 8,\n  vars: 8,\n  consts: [[\"mat-raised-button\", \"\", 3, \"disabled\", \"type\", \"color\", \"click\"], [1, \"loading-indicator\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [3, \"color\", \"diameter\", 4, \"ngIf\"], [3, \"color\", \"diameter\"]],\n  template: function ButtonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function ButtonComponent_Template_button_click_0_listener() {\n        return ctx.execute();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementContainerStart(2, 2);\n      i0.ɵɵtemplate(3, ButtonComponent_span_3_Template, 3, 3, \"span\", 3);\n      i0.ɵɵtemplate(4, ButtonComponent_span_4_Template, 3, 3, \"span\", 3);\n      i0.ɵɵtemplate(5, ButtonComponent_span_5_Template, 3, 3, \"span\", 3);\n      i0.ɵɵtemplate(6, ButtonComponent_span_6_Template, 3, 3, \"span\", 4);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵtemplate(7, ButtonComponent_mat_spinner_7_Template, 1, 2, \"mat-spinner\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"disabled\", ctx.disabledMode)(\"type\", ctx.type)(\"color\", ctx.color);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngSwitch\", ctx.status);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"pending\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"success\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.status == \"pending\");\n    }\n  },\n  directives: [i1.MatButton, i2.NgSwitch, i2.NgSwitchCase, i2.NgSwitchDefault, i2.NgIf, i3.MatSpinner],\n  pipes: [i4.TranslatePipe],\n  styles: [\"button[_ngcontent-%COMP%] {\\n  border-radius: 10rem;\\n  padding-top: 0.5rem;\\n  padding-bottom: 0.5rem;\\n  text-transform: uppercase;\\n  font-weight: bold;\\n  width: 20rem;\\n}\\nbutton[_ngcontent-%COMP%]   .loading-indicator[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center;\\n  align-items: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1dHRvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG9CQUFBO0VBQ0EsbUJBQUE7RUFDQSxzQkFBQTtFQUNBLHlCQUFBO0VBQ0EsaUJBQUE7RUFDQSxZQUFBO0FBQ0o7QUFDSTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7QUFDTiIsImZpbGUiOiJidXR0b24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJidXR0b24ge1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTByZW07XHJcbiAgICBwYWRkaW5nLXRvcDogMC41cmVtO1xyXG4gICAgcGFkZGluZy1ib3R0b206IDAuNXJlbTtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIHdpZHRoOiAyMHJlbTtcclxuXHJcbiAgICAubG9hZGluZy1pbmRpY2F0b3J7XHJcbiAgICAgIGRpc3BsYXk6ZmxleDtcclxuICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICB9XHJcbiAgfSJdfQ== */\"]\n});","map":{"version":3,"sources":["D:\\Code\\angular-crm\\client\\src\\app\\shared\\form\\button\\button.component.ts","D:\\Code\\angular-crm\\client\\src\\app\\shared\\form\\button\\button.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-button',\r\n  templateUrl: './button.component.html',\r\n  styleUrls: ['./button.component.scss'],\r\n})\r\nexport class ButtonComponent implements OnInit {\r\n  @Input() timeOutInMillis: number = 1500;\r\n\r\n  @Input() text: string = '';\r\n\r\n  status: 'idle' | 'pending' | 'success' | 'error' = 'idle';\r\n\r\n  @Input() color: 'primary' | 'accent' = 'primary';\r\n  @Input() type: 'button' | 'submit' | 'reset' = 'submit';\r\n\r\n  get colorInverse(): 'primary' | 'accent' {\r\n    if (this.color == 'primary') return 'accent';\r\n\r\n    return 'primary';\r\n  }\r\n\r\n  @Input() pendingText: string = 'button.messages.loading';\r\n  @Input() successMessage: string = 'button.messages.successMessage';\r\n  @Input() errorMessage: string = 'button.messages.errorMessage';\r\n\r\n  @Input() disabled: boolean = false;\r\n\r\n  get disabledMode(): boolean {\r\n    return this.disabled || this.status != 'idle';\r\n  }\r\n\r\n  @Input() action: () => Promise<any> = async () => {};\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  async execute() {\r\n    try {\r\n      this.status = 'pending';\r\n      await this.action();\r\n      this.status = 'success';\r\n      await this.delay(this.timeOutInMillis);\r\n\r\n      this.status = 'idle';\r\n    } catch (error) {\r\n      console.error('Failed executing action with error', error);\r\n\r\n      this.status = 'error';\r\n      await this.delay(this.timeOutInMillis);\r\n      this.status = 'idle';\r\n    }\r\n  }\r\n\r\n  delay = (timeOutInMilliSeconds: number) =>\r\n    new Promise((resolve) => setTimeout(resolve, timeOutInMilliSeconds));\r\n}\r\n","<button\r\n  [disabled]=\"disabledMode\"\r\n  mat-raised-button\r\n  [type]=\"type\"\r\n  [color]=\"color\"\r\n  (click)=\"execute()\"\r\n>\r\n  <div class=\"loading-indicator\">\r\n    <ng-container [ngSwitch]=\"status\">\r\n      <span *ngSwitchCase=\"'pending'\">{{ pendingText | translate }}</span>\r\n      <span *ngSwitchCase=\"'success'\">{{ successMessage | translate }}</span>\r\n\r\n      <span *ngSwitchCase=\"'error'\">{{ errorMessage | translate }}</span>\r\n\r\n      <span *ngSwitchDefault>{{ text | translate }}</span>\r\n    </ng-container>\r\n\r\n    <mat-spinner\r\n      [color]=\"color\"\r\n      *ngIf=\"status == 'pending'\"\r\n      [diameter]=\"24\"\r\n    ></mat-spinner>\r\n  </div>\r\n</button>\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}