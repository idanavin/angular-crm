{"ast":null,"code":"import * as i0 from \"@angular/core\";\n\nfunction CustomerListComponent_mat_list_option_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-list-option\", 1);\n    i0.ɵɵelement(1, \"img\", 2);\n    i0.ɵɵelementStart(2, \"h3\", 3);\n    i0.ɵɵelementStart(3, \"span\", 4);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\");\n    i0.ɵɵelementStart(6, \"span\", 4);\n    i0.ɵɵtext(7, \"AGE\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"span\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"p\", 3);\n    i0.ɵɵelementStart(11, \"span\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"span\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"h1\", 3);\n    i0.ɵɵelementStart(16, \"div\");\n    i0.ɵɵelementStart(17, \"span\", 4);\n    i0.ɵɵtext(18, \"PURCHASED\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"span\");\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"div\");\n    i0.ɵɵelementStart(22, \"span\", 4);\n    i0.ɵɵtext(23, \"SPENT\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"span\");\n    i0.ɵɵtext(25);\n    i0.ɵɵpipe(26, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const user_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", user_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", user_r1 == null ? null : user_r1.picture == null ? null : user_r1.picture.thumbnail, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(user_r1.name.title);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\": \", user_r1.dob.age, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", user_r1.name.first, \" \", user_r1.name.last, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.email);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\": \", user_r1.purchased ? user_r1.purchased.length : \"0\", \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\": \", i0.ɵɵpipeBind2(26, 9, ctx_r0.getTotalSpendingOfUser(user_r1), \"1.2-2\"), \"$\");\n  }\n}\n\nexport class CustomerListComponent {\n  constructor() {}\n\n  ngOnInit() {}\n\n  getTotalSpendingOfUser(user) {\n    var _a;\n\n    const totalCostArray = (_a = user.purchased) === null || _a === void 0 ? void 0 : _a.map(purchased => purchased.total_cost);\n    let totalCost = 0;\n    totalCostArray === null || totalCostArray === void 0 ? void 0 : totalCostArray.forEach(purchase => totalCost += parseFloat(purchase));\n    return totalCost;\n  }\n\n}\n\nCustomerListComponent.ɵfac = function CustomerListComponent_Factory(t) {\n  return new (t || CustomerListComponent)();\n};\n\nCustomerListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CustomerListComponent,\n  selectors: [[\"app-customer-list\"]],\n  inputs: {\n    customers: \"customers\"\n  },\n  decls: 2,\n  vars: 3,\n  consts: [[\"mat\", \"\", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"mat\", \"\", 3, \"value\"], [\"matListAvatar\", \"\", \"alt\", \"...\", 3, \"src\"], [\"matLine\", \"\", 1, \"flex\"], [\"translate\", \"\"]],\n  template: function CustomerListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CustomerListComponent_mat_list_option_0_Template, 27, 12, \"mat-list-option\", 0);\n      i0.ɵɵpipe(1, \"async\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(1, 1, ctx.customers));\n    }\n  },\n  styles: [\".mat-list-text.mat-list-base.mat-list-item[_ngcontent-%COMP%] {\\n  flex-direction: row;\\n}\\n\\n.spacer[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n.flex.mat-line[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImN1c3RvbWVyLWxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFSSxtQkFBQTtBQUFKOztBQUVBO0VBQ0ksV0FBQTtBQUNKOztBQUNBO0VBQ0ksYUFBQTtFQUNBLDhCQUFBO0FBRUoiLCJmaWxlIjoiY3VzdG9tZXItbGlzdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtbGlzdC10ZXh0Lm1hdC1saXN0LWJhc2UubWF0LWxpc3QtaXRlbSB7XHJcbiAgICAvLyBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxufVxyXG4uc3BhY2VyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcbi5mbGV4Lm1hdC1saW5lIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbn0iXX0= */\"]\n});","map":{"version":3,"sources":["D:\\Code\\angular-crm\\src\\app\\router-pages\\customers\\customer-list\\customer-list.component.ts","D:\\Code\\angular-crm\\src\\app\\router-pages\\customers\\customer-list\\customer-list.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { RandomUser } from 'src/app/domain-layer/entities/random-users';\n\n@Component({\n  selector: 'app-customer-list',\n  templateUrl: './customer-list.component.html',\n  styleUrls: ['./customer-list.component.scss']\n})\nexport class CustomerListComponent implements OnInit {\n\n  @Input()\n  customers!: Promise<RandomUser[]>;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  getTotalSpendingOfUser(user: RandomUser): number {\n    const totalCostArray = user.purchased?.map(purchased => purchased.total_cost)\n    let totalCost = 0\n    totalCostArray?.forEach(purchase => totalCost += parseFloat(purchase))\n    return totalCost\n  }\n\n}\n","<mat-list-option mat *ngFor=\"let user of customers | async\" [value]=\"user\">\r\n  <img matListAvatar [src]=\"user?.picture?.thumbnail\" alt=\"...\" />\r\n  <h3 matLine class=\"flex\">\r\n    <span translate>{{ user.name.title }}</span>\r\n    <div>\r\n      <span translate>AGE</span>\r\n      <span>: {{ user.dob.age }}</span>\r\n    </div>\r\n  </h3>\r\n  <p matLine class=\"flex\">\r\n    <span>{{ user.name.first }} {{ user.name.last }}</span>\r\n    <span>{{ user.email }}</span>\r\n  </p>\r\n  <h1 matLine class=\"flex\">\r\n    <div>\r\n      <span translate>PURCHASED</span>\r\n      <span>: {{ user.purchased ? user.purchased.length : \"0\" }}</span>\r\n    </div>\r\n    <div>\r\n      <span translate>SPENT</span>\r\n      <span>: {{ getTotalSpendingOfUser(user) | number: \"1.2-2\" }}$</span>\r\n    </div>\r\n  </h1>\r\n</mat-list-option>\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}